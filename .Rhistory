1 + 1
x <- 6
# this is a comment
# write a script
hours_in_a_week <- 24 * 7
hours_in_a_week
# write a script
hours_in_a_week <- 24 * 7
# write a script
hours_in_a_week <- 24 * 7
# Create a variable `max_puppies`, which is the number of puppies you can
# afford for $1,000
max_puppies <- total_cost / 1000
Create a variable `max_puppies`, which is the number of puppies you can
# afford for $1,000
#
# Create a variable `hometown` that stores the city in which you were born
hometown <- "Honolulu"
# Assign your name to the variable `my_name`
my_name <- "Allison"
# Create a variable `max_puppies`, which is the number of puppies you can
# afford for $1,000
max_puppies <- total_cost / 1000
# Exercise 1: practice with basic R syntax
# Create a variable `hometown` that stores the city in which you were born
hometown <- "Honolulu"
# Assign your name to the variable `my_name`
my_name <- "Allison"
# Assign your height (in inches) to a variable `my_height`
my_height <- 5 * 12 + 3
# Create a variable `puppies` equal to the number of puppies you'd like to have
puppies <- 1
# Create a variable `puppy_price`, which is how much you think a puppy costs
puppy_price <- 1000
# Create a variable `total_cost` that has the total cost of all of your puppies
total_cost <- puppies * puppy_price
# Create a boolean variable `too_expensive`, set to TRUE if the cost is greater
# than $1,000
too_expensive <- total_cost > 1000
# Create a variable `max_puppies`, which is the number of puppies you can
# afford for $1,000
max_puppies <- total_cost / 1000
# Create a variable `max_puppies`, which is the number of puppies you can
# afford for $1,000
max_puppies <- round(1000/puppy_price)
# Create a variable `max_puppies`, which is the number of puppies you can
# afford for $1,000
max_puppies <- floor(1000/puppy_price)
# Create a variable `puppy_price`, which is how much you think a puppy costs
puppy_price <- 100
# Create a variable `max_puppies`, which is the number of puppies you can
# afford for $1,000
max_puppies <- floor(1000/puppy_price)
?substr
# Create a variable `lyric` that contains the text "I like to eat apples and
# bananas"
lyric <- "I like to eat apples and bananas"
# Use the `substr()` function to extract the 1st through 13th letters from the
# `lyric`, and store the result in a variable called `intro`
# Use `?substr` to see more about this function
intro <- substr(lyric, 1, 13)
# Use the `substr()` function to extract the 1st through 13th letters from the
# `lyric`, and store the result in a variable called `intro`
# Use `?substr` to see more about this function
intro <- substr(lyric, 1, 13)
intro
last_letter <- nchar(lyric)
fruits <- substr(lyric, 15, last_letter)
fruits
?gsub
# Use the `gsub()` function to substitute all the "a"s in `fruits` with "ee".
# Store the result in a variable called `fruits_e`
# Hint: see http://www.endmemo.com/program/R/sub.php for a simpmle example (or
# use `?gsub`)
fruits_e <- sub("a", "e", lyrics)
# Use the `gsub()` function to substitute all the "a"s in `fruits` with "ee".
# Store the result in a variable called `fruits_e`
# Hint: see http://www.endmemo.com/program/R/sub.php for a simpmle example (or
# use `?gsub`)
fruits_e <- sub("a", "e", lyric)
fruits_e
# Use the `gsub()` function to substitute all the "a"s in `fruits` with "ee".
# Store the result in a variable called `fruits_e`
# Hint: see http://www.endmemo.com/program/R/sub.php for a simpmle example (or
# use `?gsub`)
fruits_e <- gsub("a", "e", lyric)
fruits_e
# Use the `gsub()` function to substitute all the "a"s in `fruits` with "o".
# Store the result in a variable called `fruits_o`
fruits_e <- gsub("a", "o", lyric)
# Use the `gsub()` function to substitute all the "a"s in `fruits` with "ee".
# Store the result in a variable called `fruits_e`
# Hint: see http://www.endmemo.com/program/R/sub.php for a simpmle example (or
# use `?gsub`)
fruits_e <- gsub("a", "e", lyric)
# Use the `gsub()` function to substitute all the "a"s in `fruits` with "o".
# Store the result in a variable called `fruits_o`
fruits_o <- gsub("a", "o", lyric)
fruits_o
# Create a new variable `lyric_e` that is the `intro` combined with the new
# `fruits_e` ending. Print out this variable
lyric_e <- intro
lyric_e
# Create a new variable `lyric_e` that is the `intro` combined with the new
# `fruits_e` ending. Print out this variable
lyric_e <- intro + substr(fruits_e, 15, last_letter)
# Create a new variable `lyric_e` that is the `intro` combined with the new
# `fruits_e` ending. Print out this variable
lyric_e <- c(intro, substr(fruits_e, 15, last_letter))
lyric_e
lyric_e <- c(intro, substr(fruits_e, 15, last_letter))
print(lyric_e)
# Without making a new variable, print out the `intro` combined with the new
# `fruits_o` ending
print(c(intro, substr(fruits_e, 15, last_letter)))
lyric_e <- cbind(intro, substr(fruits_e, 15, last_letter))
print(lyric_e)
add_three <- function(a) {
a + 3
}
add_three(3)
ten <- add_three(7)
imperial_to_metric <- function(feet, inches) {
total_inches <- feet * 12 + inches
meters <- 0.0254 * total_inches
meters
}
# Create a variable `height_in_meters` by passing your height in imperial to the
# `imperial_to_metric` function
height_in_meters <- imperial_to_metric(5, 3)
# Use the `gsub()` function to substitute all the "a"s in `fruits` with "ee".
# Store the result in a variable called `fruits_e`
# Hint: see http://www.endmemo.com/program/R/sub.php for a simpmle example (or
# use `?gsub`)
fruits_e <- gsub("a", "ee", lyric)
lyric_e <- c(intro, substr(fruits_e, 15, last_letter))
print(lyric_e)
lyric_e <- c(intro, substr(fruits_e, 15, nchar(fruits_e)))
print(lyric_e)
# Without making a new variable, print out the `intro` combined with the new
# `fruits_o` ending
print(c(intro, substr(fruits_o, 15, nchar(fruits_o)))
# Without making a new variable, print out the `intro` combined with the new
# `fruits_o` ending
print(c(intro, substr(fruits_o, 15, nchar(fruits_o)))
# Without making a new variable, print out the `intro` combined with the new
# `fruits_o` ending
print(c(intro, substr(fruits_o, 15, nchar(fruits_o))))
shiny::runApp('C:/Users/allic/Desktop/info201/a8-shiny-alliL')
runApp('C:/Users/allic/Desktop/info201/a8-shiny-alliL')
runApp('C:/Users/allic/Desktop/info201/a8-shiny-alliL')
runApp('C:/Users/allic/Desktop/info201/a8-shiny-alliL')
runApp('C:/Users/allic/Desktop/info201/a8-shiny-alliL')
runApp('C:/Users/allic/Desktop/info201/a8-shiny-alliL')
runApp('C:/Users/allic/Desktop/info201/a8-shiny-alliL')
runApp('C:/Users/allic/Desktop/info201/a8-shiny-alliL')
runApp('C:/Users/allic/Desktop/info201/a8-shiny-alliL')
runApp('C:/Users/allic/Desktop/info201/a8-shiny-alliL')
runApp('C:/Users/allic/Desktop/info201/a8-shiny-alliL')
runApp('C:/Users/allic/Desktop/info201/a8-shiny-alliL')
runApp('C:/Users/allic/Desktop/info201/a8-shiny-alliL')
runApp('C:/Users/allic/Desktop/info201/a8-shiny-alliL')
runApp('C:/Users/allic/Desktop/info201/a8-shiny-alliL')
runApp('C:/Users/allic/Desktop/info201/a8-shiny-alliL')
runApp('C:/Users/allic/Desktop/info201/a8-shiny-alliL')
runApp('C:/Users/allic/Desktop/info201/a8-shiny-alliL')
install.packages('rsconnect')
rsconnect::setAccountInfo(name='allil', token='C20ADEBF46E17FF3A0AC7CAEDC5D0EE9', secret='2IqBT6gk7P7503g2QvvDZ0ccf78cutjVfl3ZqOnn')
runApp('C:/Users/allic/Desktop/info201/a8-shiny-alliL')
runApp('C:/Users/allic/Desktop/info201/a8-shiny-alliL')
runApp('C:/Users/allic/Desktop/info201/a8-shiny-alliL')
runApp('C:/Users/allic/Desktop/info201/a8-shiny-alliL')
runApp('C:/Users/allic/Desktop/info201/a8-shiny-alliL')
styler:::style_active_file()
lintr:::addin_lint()
styler:::style_active_file()
lintr:::addin_lint()
lintr:::addin_lint()
lintr:::addin_lint()
styler:::style_active_file()
lintr:::addin_lint()
lintr:::addin_lint()
lintr:::addin_lint()
lintr:::addin_lint()
lintr:::addin_lint()
runApp('C:/Users/allic/Desktop/info201/a8-shiny-alliL')
shiny::runApp('C:/Users/allic/Desktop/info201/a8-shiny-alliL')
runApp('C:/Users/allic/Desktop/info201/a8-shiny-alliL')
styler:::style_active_file()
runApp('C:/Users/allic/Desktop/info201/a8-shiny-alliL')
source("api_key.R")
# Construct an HTTP request to ...
# The base URI is ``
# The resource is ``
endpoint <- "https://accounts.spotify.com/authorize/"
query_params <- list(client_id = spotify_id, response_type = "code",
redirect_uri= "https%3A%2F%2Fexample.com%2Fcallback")
# Send the HTTP Request to download the data
# Extract the content and convert it from JSON
response <- GET(endpoint, query = query_params)
parsed_data <- fromJSON(content(response, "text"))
View(parsed_data)
library(httr)
library(jsonlite)
source("api_key.R")
# Construct an HTTP request to ...
# The base URI is ``
# The resource is ``
endpoint <- "https://accounts.spotify.com/authorize/"
query_params <- list(client_id = spotify_id, response_type = "code",
redirect_uri= "https%3A%2F%2Fexample.com%2Fcallback")
# Send the HTTP Request to download the data
# Extract the content and convert it from JSON
response <- GET(endpoint, query = query_params)
parsed_data <- fromJSON(content(response, "text"))
View(parsed_data)
setwd("C:/Users/allic/Desktop/info201/squadBF2")
library(httr)
library(jsonlite)
source("api_key.R")
# Construct an HTTP request to ...
# The base URI is ``
# The resource is ``
endpoint <- "https://accounts.spotify.com/authorize/"
query_params <- list(client_id = spotify_id, response_type = "code",
redirect_uri= "https%3A%2F%2Fexample.com%2Fcallback")
# Send the HTTP Request to download the data
# Extract the content and convert it from JSON
response <- GET(endpoint, query = query_params)
parsed_data <- fromJSON(content(response, "text"))
View(parsed_data)
kms_response <- "https://api.spotify.com/v1/users/12168600676/playlists/66BAIxJsmVcPVf5M4p5oUs"
parsed_data2 <- fromJSON(content(kms_response, "text"))
kms_response <- GET("https://api.spotify.com/v1/users/12168600676/playlists/66BAIxJsmVcPVf5M4p5oUs", query = query_params)
parsed_data2 <- fromJSON(content(kms_response, "text"))
View(parsed_data2)
library(httr)
library(jsonlite)
source("api_key.R")
# Construct an HTTP request to ...
# The base URI is ``
# The resource is ``
endpoint <- "https://api.spotify.com/v1/users/spotify/playlists/37i9dQZF1DX5nwnRMcdReF"
query_params <- list(client_id = spotify_id, response_type = "code",
redirect_uri= "https%3A%2F%2Fexample.com%2Fcallback")
# Send the HTTP Request to download the data
# Extract the content and convert it from JSON
response <- GET(endpoint, query = query_params)
parsed_data <- fromJSON(content(response, "text"))
View(parsed_data)
# Top Tracks of 2017 URI
# spotify:user:spotify:playlist:37i9dQZF1DX5nwnRMcdReF
shiny::runApp('C:/Users/allic/Desktop/info201/a8-shiny-alliL')
