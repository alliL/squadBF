h3("Kiley Wong"),
img(
src = "http://www.dogster.com/wp-content/uploads/2016/01/what-age-do-puppies-lose-their-teeth.jpg",
height = 200, width = 200, align = "middle"
),
p("Hi hi! I am a shophomore at the University Washington Seattle. My intended major is either
Informatics or Human Centered Design and Engineering. I am originally from Southern California
and enjoy eating and exploring!")
)
)
))
runApp()
# Make function which takes in audio features from "US_top_50"
# and shows a bubble chart the artists, track names, popularity, and selected feature.
# Set color and size of the bubbles by popularity.
bubble_plot <- function(feature){
p <- plot_ly(global_top_50, x = ~get(feature), y = ~artist,
color = ~popularity,
colors = "Set3", size = ~popularity, type = "scatter", mode = "markers",
sizes = c(10, 40), marker = list(opacity = 0.85,
sizemode = "diameter"), hoverinfo = "text",
text = ~paste0("Artist: ", artist,"<br>Track: ", tracks,
"<br>Popularity: ", popularity,
"<br>", capitalize(feature), ": ", get(feature))) %>%
layout(title = paste0(capitalize(feature), " of US Top 50 Songs"),
margin = list(l = 150, r = 10, b = 30, t = 30),
xaxis = list(title = capitalize(feature), showgrid = FALSE),
yaxis = list(title = "Artist", showgrid = FALSE))
return(p)
}
bubble_plot()
bubble_plot(popularity)
bubble_plot("popularity")
shinyUI(navbarPage(
"Spotify Playlist Analysis",
# Create a tab panel for scatter plot
tabPanel(
"Home",
titlePanel(
h1("What can we learn using the Spotify API?",
align = "center",
style = "color:cadetblue;padding-bottom:20px"
)
),
fluidPage(
img(
"",
src =
"https://www.purplepandamedia.com/wp-content/uploads/2015/03/spotify-1.jpg"
),
p(
"Using the",
a("Rspotify",
href = "https://www.r-bloggers.com/my-new-r-package/"
), "package to access Spotify API, we were able to analyze Spotify
playlists, artists, and features. Here is a list of song features:"
),
tableOutput('feature_descriptions')
)
),
# US vs. Global Top 50 Comparison
tabPanel(
"US v.s. Global",
titlePanel(
h1("US Top 50 v.s. Global Top 50 Comparison",
style = "color:cadetblue;padding-bottom:20px"
)
),
# Create sidebar layout
sidebarLayout(
# Side panel for controls
sidebarPanel(
style = "position:fixed;width:300px;color:cadetblue",
# Add a select input for the x variable
selectInput(
"x_var",
label = "X Variable",
choices = features,
selected = "popularity"
),
# Add a select input for the y variable
selectInput(
"y_var",
label = "Y Variable",
choices = features,
selected = "danceability"
)
),
# Create main panel to display scatter plot
mainPanel(
p(
"The following graph lets you compare attributes of the",
a("US Top 50",
href = "https://open.spotify.com/user/spotifycharts/playlist/37i9dQZEVXbLRQDuF5jeBp"
), "playlist and the", a("Global Top 50",
href = "https://open.spotify.com/user/spotifycharts/playlist/37i9dQZEVXbMDoHDwVN2tF"
), "playlist."
),
plotlyOutput("us_global")
)
)
),
tabPanel(
"Feature v.s. Popularity",
titlePanel(
h1("Feature of Song and its relationship to Popularity",
style = "color:cadetblue;padding-bottom:20px"
)
),
sidebarLayout(
sidebarPanel(
style = "position:fixed;width:300px;color:cadetblue",
p("Select the interest of feature of songs, and it will return
a bubble plot for the feature. One can see the relationship of
the feature and the popularity of the songs."),
selectInput(
"feature",
label = "Feature of the Song",
choices = features
)
),
mainPanel(
plotlyOutput("feature_bubble"),
p(style = "position:fixed;width:300px;color:cadetblue"
)
)
)),
tabPanel(
"Analysis",
h1("What do we learn from the relationship of feature versus popularity?",
style = "color:cadetblue;padding-bottom:20px"
),
fluidPage(
p(
"When selecting feature and see its relationship with popularity,
one can see that most of the features don't really affect popularity
except one feature, ", strong("ENERGY.")),
p("From selecting the feature", strong("ENERGY."),
"we are able to see that most of the song with higher popularity has higher energy."),
p("However, when selecting", span(strong("popularity")),
", we can see that there is an outlier, which is form artist", span(strong("A$AP Rocky."))),
img(src = "https://images.genius.com/0635bd3f246cb6af9c8aa48a06263c39.1000x1000x1.jpg",
height = 200, width = 200, align = "middle"),
p("Then we dig into the data we got from spotify, seeing that there are 2 songs from the same
artist with 0 popularity. There is obviously a problem with the data."),
p("First of all, since it says on", a("Spotify website", href = "https://open.spotify.com/artist/13ubrt8QOOCPljQ2FL1Kca/about"),
"that there are listeners from different areas every month, it is impossible that the popularity
of this artist is", strong("zero.")),
p("Second of all, if the artist's popularity in Spotify's data is zero,
how come it gets in Global Top 50 soundtrack provided by Spotify?"),
p("This is an important issue for us to think about, and to rethink the credibility
of Spoify.")
)
),
# Create a tabPanel to show bar plot
tabPanel(
"About Us",
titlePanel(
h1("Meet the Team",
style = "color:cadetblue;"
)
),
fluidPage(
p("The project that we were working on is to show that we have a good understanding of the r program.
We are trying show that we are able to create a shiny application that uses a dataset of our choice.
The data set that we have chosen to use is the Rspotify API. We are using data from spotify and we are
using that to show differnt visualizations of the data."),
h3("Allison Lee"),
img(src = "https://i.pinimg.com/736x/31/c3/4f/31c34f9fefbb06074c45434b543f6e11--too-cute-puppies-puppies-cutest.jpg",
height = 200, width = 200, align = "middle"),
p("Hi! I am currently a sophomore at the Universrity of Washington Seattle. My intended major
is informatics and I am originally from Honolulu, Hawaii. I enjoy all kinds of food and I think
that data structures and information is a big part of the evolving world."),
h3("Brian Luu"),
img(src = "http://barkingroyalty.com/wp-content/uploads/2015/12/pomeraninan-puppy.jpg?x30644.jpg",
height = 200, width = 200, align = "middle"),
p("Hello, I am a freshman at the University of Washington Seattle and a direct admit ot the
Information School, majoring in informatics. Hit me up on slack @Brian Luu!"),
h3("Tiffany Truong"),
img(src = "https://i.redd.it/51p5c1efueoy.jpg",
height = 200, width = 200, align = "middle"),
p("HI!! I am currently a freshman at the University of Washington Seattle. I am undecided on what I would like
to pursue as a major at this time, but I do have an interest in informatics."),
h3("Maggie Wang"),
img(src = "http://vomglockkennel.com/wp-content/gallery/glockqgallery/8.jpg",
height = 200, width = 200, align = "middle"),
p("Helloo! I am a sophomore at UW-Seattle, and I'm a Communications major with Informatics minor!
I'm from Taiwan and I love long coat German Shepards!"),
h3("Kiley Wong"),
img(src = "http://www.dogster.com/wp-content/uploads/2016/01/what-age-do-puppies-lose-their-teeth.jpg",
height = 200, width = 200, align = "middle"),
p("Hi hi! I am a shophomore at the University Washington Seattle. My intended major is either
Informatics or Human Centered Design and Engineering. I am originally from Southern California
and enjoy eating and exploring!")
)
)
)))
runApp()
# Make function which takes in audio features from "US_top_50"
# and shows a bubble chart the artists, track names, popularity, and selected feature.
# Set color and size of the bubbles by popularity.
bubble_plot <- function(feature){
p <- plot_ly(global_top_50, x = ~get(feature), y = ~artist,
color = ~popularity,
colors = "Set3", size = ~popularity, type = "scatter", mode = "markers",
marker = list(opacity = 0.85,
sizemode = "diameter"), hoverinfo = "text",
text = ~paste0("Artist: ", artist,"<br>Track: ", tracks,
"<br>Popularity: ", popularity,
"<br>", capitalize(feature), ": ", get(feature))) %>%
layout(title = paste0(capitalize(feature), " of US Top 50 Songs"),
margin = list(l = 150, r = 10, b = 30, t = 30),
xaxis = list(title = capitalize(feature), showgrid = FALSE),
yaxis = list(title = "Artist", showgrid = FALSE))
return(p)
}
bubble_plot("popularity")
# Make function which takes in audio features from "US_top_50"
# and shows a bubble chart the artists, track names, popularity, and selected feature.
# Set color and size of the bubbles by popularity.
bubble_plot <- function(feature){
p <- plot_ly(global_top_50, x = ~get(feature), y = ~artist,
color = ~popularity,
colors = "Set3", size = ~popularity, type = "scatter", mode = "markers",
sizes = c(10, 40), marker = list(opacity = 0.85,
sizemode = "diameter"), hoverinfo = "text",
text = ~paste0("Artist: ", artist,"<br>Track: ", tracks,
"<br>Popularity: ", popularity,
"<br>", capitalize(feature), ": ", get(feature))) %>%
layout(title = paste0(capitalize(feature), " of US Top 50 Songs"),
margin = list(l = 150, r = 10, b = 30, t = 30),
xaxis = list(title = capitalize(feature), showgrid = FALSE),
yaxis = list(title = "Artist", showgrid = FALSE))
return(p)
}
runApp()
runApp()
runApp()
runApp()
shinyUI(navbarPage(
"Spotify Playlist Analysis",
# Create a tab panel for scatter plot
tabPanel(
"Home",
titlePanel(
h1("What can we learn using the Spotify API?",
align = "center",
style = "color:cadetblue;padding-bottom:20px"
)
),
fluidPage(
img(
"",
src =
"https://www.purplepandamedia.com/wp-content/uploads/2015/03/spotify-1.jpg"
),
p(
"Using the",
a("Rspotify",
href = "https://www.r-bloggers.com/my-new-r-package/"
), "package to access Spotify API, we were able to analyze Spotify
playlists, artists, and features. Here is a list of song features:"
),
tableOutput('feature_descriptions')
)
),
# US vs. Global Top 50 Comparison
tabPanel(
"US v.s. Global",
titlePanel(
h1("US Top 50 v.s. Global Top 50 Comparison",
style = "color:cadetblue;padding-bottom:20px"
)
),
# Create sidebar layout
sidebarLayout(
# Side panel for controls
sidebarPanel(
style = "position:fixed;width:300px;color:cadetblue",
# Add a select input for the x variable
selectInput(
"x_var",
label = "X Variable",
choices = features,
selected = "popularity"
),
# Add a select input for the y variable
selectInput(
"y_var",
label = "Y Variable",
choices = features,
selected = "danceability"
)
),
# Create main panel to display scatter plot
mainPanel(
p(
"The following graph lets you compare attributes of the",
a("US Top 50",
href = "https://open.spotify.com/user/spotifycharts/playlist/37i9dQZEVXbLRQDuF5jeBp"
), "playlist and the", a("Global Top 50",
href = "https://open.spotify.com/user/spotifycharts/playlist/37i9dQZEVXbMDoHDwVN2tF"
), "playlist."
),
plotlyOutput("us_global")
)
)
),
tabPanel(
"Feature v.s. Popularity",
titlePanel(
h1("Feature of Song and its relationship to Popularity",
style = "color:cadetblue;padding-bottom:20px"
)
),
sidebarLayout(
sidebarPanel(
style = "position:fixed;width:300px;color:cadetblue",
p("Select the interest of feature of songs, and it will return
a bubble plot for the feature. One can see the relationship of
the feature and the popularity of the songs."),
selectInput(
"feature",
label = "Feature of the Song",
choices = features,
selected = "popularity"
)
),
mainPanel(
plotlyOutput("feature_bubble"),
p(style = "position:fixed;width:300px;color:cadetblue"
)
)
)),
tabPanel(
"Analysis",
h1("What do we learn from the relationship of feature versus popularity?",
style = "color:cadetblue;padding-bottom:20px"
),
fluidPage(
p(
"When selecting feature and see its relationship with popularity,
one can see that most of the features don't really affect popularity
except one feature, ", strong("ENERGY.")),
p("From selecting the feature", strong("ENERGY."),
"we are able to see that most of the song with higher popularity has higher energy."),
p("However, when selecting", span(strong("popularity")),
", we can see that there is an outlier, which is form artist", span(strong("A$AP Rocky."))),
img(src = "https://images.genius.com/0635bd3f246cb6af9c8aa48a06263c39.1000x1000x1.jpg",
height = 200, width = 200, align = "middle"),
p("Then we dig into the data we got from spotify, seeing that there are 2 songs from the same
artist with 0 popularity. There is obviously a problem with the data."),
p("First of all, since it says on", a("Spotify website", href = "https://open.spotify.com/artist/13ubrt8QOOCPljQ2FL1Kca/about"),
"that there are listeners from different areas every month, it is impossible that the popularity
of this artist is", strong("zero.")),
p("Second of all, if the artist's popularity in Spotify's data is zero,
how come it gets in Global Top 50 soundtrack provided by Spotify?"),
p("This is an important issue for us to think about, and to rethink the credibility
of Spoify.")
)
),
# Create a tabPanel to show bar plot
tabPanel(
"About Us",
titlePanel(
h1("Meet the Team",
style = "color:cadetblue;"
)
),
fluidPage(
p("The project that we were working on is to show that we have a good understanding of the r program.
We are trying show that we are able to create a shiny application that uses a dataset of our choice.
The data set that we have chosen to use is the Rspotify API. We are using data from spotify and we are
using that to show differnt visualizations of the data."),
h3("Allison Lee"),
img(src = "https://i.pinimg.com/736x/31/c3/4f/31c34f9fefbb06074c45434b543f6e11--too-cute-puppies-puppies-cutest.jpg",
height = 200, width = 200, align = "middle"),
p("Hi! I am currently a sophomore at the Universrity of Washington Seattle. My intended major
is informatics and I am originally from Honolulu, Hawaii. I enjoy all kinds of food and I think
that data structures and information is a big part of the evolving world."),
h3("Brian Luu"),
img(src = "http://barkingroyalty.com/wp-content/uploads/2015/12/pomeraninan-puppy.jpg?x30644.jpg",
height = 200, width = 200, align = "middle"),
p("Hello, I am a freshman at the University of Washington Seattle and a direct admit ot the
Information School, majoring in informatics. Hit me up on slack @Brian Luu!"),
h3("Tiffany Truong"),
img(src = "https://i.redd.it/51p5c1efueoy.jpg",
height = 200, width = 200, align = "middle"),
p("HI!! I am currently a freshman at the University of Washington Seattle. I am undecided on what I would like
to pursue as a major at this time, but I do have an interest in informatics."),
h3("Maggie Wang"),
img(src = "http://vomglockkennel.com/wp-content/gallery/glockqgallery/8.jpg",
height = 200, width = 200, align = "middle"),
p("Helloo! I am a sophomore at UW-Seattle, and I'm a Communications major with Informatics minor!
I'm from Taiwan and I love long coat German Shepards!"),
h3("Kiley Wong"),
img(src = "http://www.dogster.com/wp-content/uploads/2016/01/what-age-do-puppies-lose-their-teeth.jpg",
height = 200, width = 200, align = "middle"),
p("Hi hi! I am a shophomore at the University Washington Seattle. My intended major is either
Informatics or Human Centered Design and Engineering. I am originally from Southern California
and enjoy eating and exploring!")
)
)
))
runApp()
runApp()
runApp()
runApp()
runApp()
bubble_plot("popularity")
View(US_top_50)
bubble_plot("popularity")
features <- list(
"Popularity" = "popularity",
"Danceability" = "danceability",
"Energy" = "energy",
"Key" = "key",
"Loudness" = "loudness",
"Mode" = "mode",
"Speechiness" = "speechiness",
"Acousticness" = "acousticness",
"Instrumentalness" = "instrumentalness",
"Liveness" = "liveness",
"Valence" = "valence",
"Tempo" = "tempo",
"Duration (ms)" = "duration_ms"
)
runApp()
bubble_plot("popularity")
shiny::runApp()
library(shiny)
library(plotly)
library(dplyr)
library(Hmisc)
source("data_wrangling.R")
# mood_booster <- get_playlist_features("spotify", "37i9dQZF1DX3rxVfibe1L0")
US_top_50 <- get_playlist_features("spotifycharts", "37i9dQZEVXbLRQDuF5jeBp")
global_top_50 <- get_playlist_features("spotifycharts", "37i9dQZEVXbMDoHDwVN2tF")
# top_tracks_2017 <- get_playlist_features("spotify", "37i9dQZF1DX5nwnRMcdReF")
feature_descriptions <- read.csv("data/feature_descriptions.csv")
# Make function which takes in audio features from "US_top_50"
# and shows a bubble chart the artists, track names, popularity, and selected feature.
# Set color and size of the bubbles by popularity.
bubble_plot <- function(feature){
p <- plot_ly(global_top_50, x = ~get(feature), y = ~artist,
color = ~popularity,
colors = "Set3", size = ~popularity, type = "scatter", mode = "markers",
sizes = c(10, 40), marker = list(opacity = 0.85,
sizemode = "diameter"), hoverinfo = "text",
text = ~paste0("Artist: ", artist,"<br>Track: ", tracks,
"<br>Popularity: ", popularity,
"<br>", capitalize(feature), ": ", get(feature))) %>%
layout(title = paste0(capitalize(feature), " of US Top 50 Songs"),
margin = list(l = 150, r = 10, b = 30, t = 30),
xaxis = list(title = capitalize(feature), showgrid = FALSE),
yaxis = list(title = "Artist", showgrid = FALSE))
return(p)
}
# US global popularity vs feature
shinyServer(function(input, output) {
output$us_global <- renderPlotly({
x <- input$x_var
y <- input$y_var
us_data <- US_top_50 %>% select(tracks, artist_full, x, y)
us_data$type <- "US"
global_data <- global_top_50 %>% select(tracks, artist_full, x, y)
global_data$type <- "Global"
data <- rbind(us_data, global_data)
plot_ly(
data = data, type = "scatter", mode = "markers", x = ~ data[[x]],
y = ~ data[[y]], color = ~ type,
text = paste0(data$tracks, ", ", data$artist_full, "<br />", data$type)
) %>%
layout(
xaxis = list(title = x),
yaxis = list(title = y)
)
})
output$feature_descriptions <- renderTable(feature_descriptions)
output$feature_bubble <- renderPlotly({
return(bubble_plot(input$feature))
})
})
# used Rspotify library to access Spotify API
# see documentation here: https://www.r-bloggers.com/my-new-r-package/
library(Rspotify)
library(dplyr)
# sourcing credentials such as client ID and client secret
source("api_key.R")
# set credentials for the Spotify API
# IMPORTANT: set the "Redirect URI". Go to your Spotify application on the
# web, go to "Edit Settings", and under "Redirect URIs", type
# "http://localhost:1410/"
# first parameter: the name of your spotify application
# second parameter: your Client ID, set this in your own api_key.R
# third parameter: your Secret Client, set this in your own api_key.R
keys <- spotifyOAuth(app_id, client_id, client_secret)
# get features for songs in the playlist
get_playlist_features <- function(playlist_user, playlist_ID) {
# get playlist
playlist <- getPlaylistSongs(playlist_user, playlist_ID, token = keys)
# get playlist features
raw_playlist_features <- list()
for (row_num in 1:nrow(playlist)) {
song <- playlist[row_num, ]$id
raw_playlist_features[[row_num]] <- getFeatures(song, token=keys)
}
playlist_features_only = do.call(rbind, raw_playlist_features)
# combine playlist and playlist features
full_join(playlist, playlist_features_only)
}
bubble_plot("popularity")
